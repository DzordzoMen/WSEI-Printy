// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Printy.Web.Database;

namespace Printy.Web.Migrations
{
    [DbContext(typeof(PrintyDbContext))]
    [Migration("20210119112730_DatabaseData")]
    partial class DatabaseData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Printy.Web.Models.PrintService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrintColor")
                        .HasColumnType("int");

                    b.Property<int>("PrintMaterial")
                        .HasColumnType("int");

                    b.Property<int>("PrintSize")
                        .HasColumnType("int");

                    b.Property<int?>("PrinterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrinterId");

                    b.ToTable("PrintService");
                });

            modelBuilder.Entity("Printy.Web.Models.Printer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Printers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer1@test.com",
                            Name = "First Printer",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer2@test.com",
                            Name = "Second Printer",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer3@test.com",
                            Name = "Printer 3",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer4@test.com",
                            Name = "Printer Printer",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer5@test.com",
                            Name = "Piąta drukarka",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer6@test.com",
                            Name = "Printer 6",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer7@test.com",
                            Name = "Printer 7",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer8@test.com",
                            Name = "Printer 8",
                            PhoneNumber = "852753951"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer9@test.com",
                            Name = "Printer no. 9",
                            PhoneNumber = "025846759"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer10@test.com",
                            Name = "Test Printer",
                            PhoneNumber = "005789111"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer11@test.com",
                            Name = "Printer #11",
                            PhoneNumber = "070030012"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer12@test.com",
                            Name = "Printero",
                            PhoneNumber = "007114500"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse commodo nisi at sapien luctus, a ornare est consequat.",
                            Email = "printer13@test.com",
                            Name = "Print by this",
                            PhoneNumber = "224444444"
                        });
                });

            modelBuilder.Entity("Printy.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "marek.wiertarka@test.com",
                            Name = "Marek",
                            Password = "Test123@",
                            Surname = "Wiertarka"
                        },
                        new
                        {
                            Id = 2,
                            Email = "printer1@test.com",
                            Name = "Basia",
                            Password = "Test123@",
                            Surname = "Kania"
                        },
                        new
                        {
                            Id = 3,
                            Email = "wkapek@test.com",
                            Name = "Wojtek",
                            Password = "Test123@",
                            Surname = "Kapeć"
                        });
                });

            modelBuilder.Entity("Printy.Web.Models.UserOrder", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FileCopies")
                        .HasColumnType("int");

                    b.Property<int?>("PrinterId")
                        .HasColumnType("int");

                    b.Property<string>("UserFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileCopies = 13,
                            PrinterId = 2,
                            UserFile = "Systemy zarządzania zadaniami w projekcie",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            FileCopies = 8,
                            PrinterId = 8,
                            UserFile = "MojeNotatki",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Printy.Web.Models.PrintService", b =>
                {
                    b.HasOne("Printy.Web.Models.Printer", null)
                        .WithMany("Services")
                        .HasForeignKey("PrinterId");
                });
#pragma warning restore 612, 618
        }
    }
}
